name: Chat

on:
  issues:
    types: [opened]

permissions:
  models: read
  issues: write

jobs:
  ai:
    runs-on: ubuntu-latest
    outputs:
      response: ${{ steps.generate.outputs.response }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install @octokit/action

      - name: Generate chat completion
        id: generate
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          SYSTEM_PROMPT=$(cat system-prompt.md | jq -Rs .)
          RESPONSE=$(curl "https://models.github.ai/inference/chat/completions" \
          -H "Content-Type: application/json" \
          -H "Authorization: Bearer $GITHUB_TOKEN" \
          -d '{
              "messages": [
                  {
                      "role": "system",
                      "content": '"$SYSTEM_PROMPT"'
                  },
                  {
                      "role": "user",
                      "content": "${{ github.event.issue.title }}"
                  }
              ],
              "model": "openai/gpt-4o"
          }' | jq -r '.choices[0].message.content')
          echo "response<<EOF" >> $GITHUB_OUTPUT
          echo "$RESPONSE" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Comment on issue
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '${{ steps.generate.outputs.response }}'
            });
